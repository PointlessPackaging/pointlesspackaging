"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# PRODUCTION = os.getenv('PP_PROD', None).lower()
PRODUCTION = str(os.getenv('PP_PROD', None)).lower()
print("mode = ", PRODUCTION)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y-x48uld(-ko4z*pwe#)t$14rjn+m=1!xh#q4mxg2d32&4_-1c'

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['pointlesspackaging.space']


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cleanup',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_datatables',
    'corsheaders',
    'pp_api',
    'accounts',
    'frontend',
    'mathfilters',
    'django_social_share',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_datatables.renderers.DatatablesRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_datatables.filters.DatatablesFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
    'PAGE_SIZE': 10,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['frontend/templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# override the defult authentication system
AUTH_USER_MODEL = 'accounts.Account'

WSGI_APPLICATION = 'server.wsgi.application'

CORS_ORIGIN_ALLOW_ALL = True

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

if PRODUCTION == 'true':
    if os.getenv('MYSQL_NAME', None) is None or os.getenv('MYSQL_USER', None) is None or os.getenv('MYSQL_PASSWORD', None) is None or os.getenv('MYSQL_HOST', None) is None:
        print("\nPlease set the valid environment variables for the MYSQL database.\n")
        print("ENV Variables required: MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD, MYSQL_NAME.")
        print("\nSee documentation for more details.\n")
        exit()

    if os.getenv('STORAGE_NAME', None) is None:
        print("\nPlease set the valid storage name.\n")
        print("ENV Variables required: STORAGE_NAME.")
        print("\nSee documentation for more details.\n")
        exit()

    if os.getenv('MASK_RCNN_API_IP', None) is None or os.getenv('MASK_RCNN_API_PORT', None) is None:
        print("\nPlease set the valid Mask R-CNN API endpoint IP address, and port.\n")
        print("ENV Variables required: MASK_RCNN_API_IP, MASK_RCNN_API_PORT.")
        print("\n-i.e. $ export MASK_RCNN_API_IP='10.0.0.1'; export MASK_RCNN_API_PORT=8500;")
        exit()

    print('PRODUCTION MODE')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': os.getenv('MYSQL_HOST', None),
            'USER': os.getenv('MYSQL_USER', None),
            'PASSWORD': os.getenv('MYSQL_PASSWORD', None),
            'NAME': os.getenv('MYSQL_NAME', None),
        }
    }

    #https://django-storages.readthedocs.io/en/latest/backends/gcloud.html
    DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
    STATICFILES_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
    GS_BUCKET_NAME = os.getenv('STORAGE_NAME', None)
    GS_FILE_OVERWRITE = False
    MASK_RCNN_API_IP = os.getenv('MASK_RCNN_API_IP', None)
    MASK_RCNN_API_PORT = os.getenv('MASK_RCNN_API_PORT', None)
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False
elif PRODUCTION == 'false':
    print('DEBUG MODE')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
    MASK_RCNN_API_IP = '0.0.0.0' # M-RCNN RUNNING LOCAL
    MASK_RCNN_API_PORT = 8500
    DEBUG = True
else:
    print("\nPP_PROD environment variable is either invalid or not found. Please set it  true or false.")
    print("\n-'True' runs the app in PRODUCTION mode. 'False' runs it in DEBUG mode.")
    print("\n-i.e. $ export PP_PROD='False'")
    exit()

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "frontend/static/"),
]
STATIC_URL = "/static/"

""" DJANGO ResizedImageField """

DJANGORESIZED_DEFAULT_SIZE = [600, 300]
DJANGORESIZED_DEFAULT_QUALITY = 95
DJANGORESIZED_DEFAULT_KEEP_META = True
DJANGORESIZED_DEFAULT_FORCE_FORMAT = 'JPEG'
DJANGORESIZED_DEFAULT_FORMAT_EXTENSIONS = {'JPEG': ".jpg"}
DJANGORESIZED_DEFAULT_NORMALIZE_ROTATION = True